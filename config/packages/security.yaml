security:
  encoders:
    App\Entity\User:
      algorithm: bcrypt
      cost: 12

  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
  providers:
    # used to reload user from session & other features (e.g. switch_user)
    app_user_provider:
      entity:
        class: App\Entity\User
        property: username
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    refresh:
      pattern: ^/api/token/refresh
      stateless: true
      anonymous: true
    login:
      pattern: ^/api/login
      stateless: true
      anonymous: true
      methods: POST
      json_login:
        check_path: app_login_check
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure
    register:
      pattern: ^/api/users
      methods: POST
      anonymous: true
    request_reset_password:
      pattern: ^/api/reset_password_requests
      methods: POST
      anonymous: true
    reset_password:
      pattern: ^/api/reset/password
      methods: POST
      anonymous: true
    user_verify:
      pattern: ^/api/users/verify_email
      methods: GET
      anonymous: true
    #api:
    #  pattern: ^/api
    #  stateless: true
    #  methods: [ 'POST', 'GET','PUT','PATCH','DELETE' ]
    #  guard:
    #     authenticators:
    #       - lexik_jwt_authentication.jwt_token_authenticator
    main:
      anonymous: ~

      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#firewalls-authentication

      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
    - { path: ^/api/token/refresh, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, methods: [ 'POST' ] }
    - { path: ^/api/users, roles: IS_AUTHENTICATED_ANONYMOUSLY, methods: [ 'POST' ] }
    - { path: ^/api/reset_password_requests, roles: IS_AUTHENTICATED_ANONYMOUSLY, methods: [ 'POST' ] }
    - { path: ^/api/reset/password, roles: IS_AUTHENTICATED_ANONYMOUSLY, methods: [ 'POST' ] }
    - { path: ^/api/users/verify_email, roles: IS_AUTHENTICATED_ANONYMOUSLY, methods: [ 'GET' ] }
   # - { path: ^/api/,    roles: [ IS_AUTHENTICATED_FULLY, ROLE_USER, ROLE_ADMIN ], methods: [ 'POST','GET','PUT','PATCH','DELETE' ] }
